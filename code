import tkinter as tk
from tkinter import messagebox
import random
import time

# 범위별 난이도 문제 생성 함수
def generate_problem(level):
    # 초등 수학
    if level == "초등":
        a = random.randint(1, 20)
        b = random.randint(1, 20)
        op = random.choice(["+", "-"])
        question = f"{a} {op} {b}"
        answer = eval(question)
    # 중등 수학
    elif level == "중등":
        a = random.randint(1, 30)
        b = random.randint(1, 30)
        op = random.choice(["+", "-", "*", "/"])
        question = f"{a} {op} {b}"
        answer = eval(question)
        answer = round(answer, 2)  # 소수점 2자리로 제한
    # 고등 수학
    elif level == "고등":
        a = random.randint(1, 50)
        b = random.randint(1, 50)
        c = random.randint(1, 10)
        question = f"{a}*{b} + {c}"
        answer = eval(question)
    # 대학 수학
    elif level == "대학":
        a = random.randint(1, 20)
        b = random.randint(1, 20)
        question = f"({a}**2) + ({b}**2)"
        answer = eval(question)
    else:
        question = "잘못된 레벨"
        answer = None
    return question, answer

# Start timestamp
start_time = None

# 문제 제출 버튼 함수
def submit_answer():
    global current_question_idx, score
    try:
        user_answer = float(answer_entry.get())
        if user_answer == problems[current_question_idx][1]:
            score += 1
        answer_entry.delete(0, tk.END)

        # 다음 문제로 이동
        current_question_idx += 1
        if current_question_idx < len(problems):
            question_label.config(text=f"문제 {current_question_idx+1}: " + problems[current_question_idx][0])
        else:
            # 시간 계산
            end_time = time.time()
            total_time = end_time - start_time
            minutes = int(total_time // 60)
            seconds = int(total_time % 60)

            # 결과 표시
            messagebox.showinfo("결과", f"점수: {score}/{len(problems)}\n풀이 시간: {minutes}분 {seconds}초")
            window.destroy()
    except ValueError:
        messagebox.showerror("오류", "숫자를 입력하세요!")

# 수학 문제 생성 및 시작 함수
def start_quiz(level):
    global problems, current_question_idx, score, start_time

    # 문제 초기화
    problems = [generate_problem(level) for _ in range(10)]
    current_question_idx = 0
    score = 0
    start_time = time.time()

    # 초기 문제 세팅
    question_label.config(text=f"문제 1: {problems[0][0]}")
    answer_entry.delete(0, tk.END)

# GUI 생성
window = tk.Tk()
window.title("수학 퀴즈 프로그램")

# 난이도 선택
level_label = tk.Label(window, text="난이도를 선택하세요:", font=("Arial", 16))
level_label.pack(pady=10)

level_buttons_frame = tk.Frame(window)
level_buttons_frame.pack()

for level in ["초등", "중등", "고등", "대학"]:
    level_button = tk.Button(level_buttons_frame, text=level, font=("Arial", 14), command=lambda lvl=level: start_quiz(lvl))
    level_button.pack(side=tk.LEFT, padx=10)

# 문제 표시
question_label = tk.Label(window, text="문제가 여기에 표시됩니다.", font=("Arial", 16))
question_label.pack(pady=20)

# 답 입력
answer_entry = tk.Entry(window, font=("Arial", 14), justify="center")
answer_entry.pack(pady=10)

# 제출 버튼
submit_button = tk.Button(window, text="제출", font=("Arial", 14), command=submit_answer)
submit_button.pack(pady=20)

# GUI 실행
window.mainloop()
